// @generated by protoc-gen-es v2.2.2 with parameter "target=ts"
// @generated from file lage/v1/lage.proto (package connectrpc.lage.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file lage/v1/lage.proto.
 */
export const file_lage_v1_lage: GenFile = /*@__PURE__*/
  fileDesc("ChJsYWdlL3YxL2xhZ2UucHJvdG8SEmNvbm5lY3RycGMubGFnZS52MSKGAQoQUnVuVGFyZ2V0UmVxdWVzdBIZCgxwYWNrYWdlX25hbWUYASABKAlIAIgBARIMCgR0YXNrGAIgASgJEhAKCHRhc2tBcmdzGAMgAygJEhMKC25vZGVPcHRpb25zGAQgASgJEhEKCW5wbUNsaWVudBgFIAEoCUIPCg1fcGFja2FnZV9uYW1lIq0BChFSdW5UYXJnZXRSZXNwb25zZRIKCgJpZBgBIAEoCRIZCgxwYWNrYWdlX25hbWUYAiABKAlIAIgBARIMCgR0YXNrGAMgASgJEhEKCWV4aXRfY29kZRgEIAEoBRIOCgZpbnB1dHMYBSADKAkSDwoHb3V0cHV0cxgGIAMoCRIOCgZzdGRvdXQYByABKAkSDgoGc3RkZXJyGAggASgJQg8KDV9wYWNrYWdlX25hbWUiDQoLUGluZ1JlcXVlc3QiHAoMUGluZ1Jlc3BvbnNlEgwKBHBvbmcYASABKAgytgEKC0xhZ2VTZXJ2aWNlEloKCVJ1blRhcmdldBIkLmNvbm5lY3RycGMubGFnZS52MS5SdW5UYXJnZXRSZXF1ZXN0GiUuY29ubmVjdHJwYy5sYWdlLnYxLlJ1blRhcmdldFJlc3BvbnNlIgASSwoEUGluZxIfLmNvbm5lY3RycGMubGFnZS52MS5QaW5nUmVxdWVzdBogLmNvbm5lY3RycGMubGFnZS52MS5QaW5nUmVzcG9uc2UiAGIGcHJvdG8z");

/**
 * @generated from message connectrpc.lage.v1.RunTargetRequest
 */
export type RunTargetRequest = Message<"connectrpc.lage.v1.RunTargetRequest"> & {
  /**
   * @generated from field: optional string package_name = 1;
   */
  packageName?: string;

  /**
   * @generated from field: string task = 2;
   */
  task: string;

  /**
   * @generated from field: repeated string taskArgs = 3;
   */
  taskArgs: string[];

  /**
   * @generated from field: string nodeOptions = 4;
   */
  nodeOptions: string;

  /**
   * @generated from field: string npmClient = 5;
   */
  npmClient: string;
};

/**
 * Describes the message connectrpc.lage.v1.RunTargetRequest.
 * Use `create(RunTargetRequestSchema)` to create a new message.
 */
export const RunTargetRequestSchema: GenMessage<RunTargetRequest> = /*@__PURE__*/
  messageDesc(file_lage_v1_lage, 0);

/**
 * @generated from message connectrpc.lage.v1.RunTargetResponse
 */
export type RunTargetResponse = Message<"connectrpc.lage.v1.RunTargetResponse"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: optional string package_name = 2;
   */
  packageName?: string;

  /**
   * @generated from field: string task = 3;
   */
  task: string;

  /**
   * @generated from field: int32 exit_code = 4;
   */
  exitCode: number;

  /**
   * @generated from field: repeated string inputs = 5;
   */
  inputs: string[];

  /**
   * @generated from field: repeated string outputs = 6;
   */
  outputs: string[];

  /**
   * @generated from field: string stdout = 7;
   */
  stdout: string;

  /**
   * @generated from field: string stderr = 8;
   */
  stderr: string;
};

/**
 * Describes the message connectrpc.lage.v1.RunTargetResponse.
 * Use `create(RunTargetResponseSchema)` to create a new message.
 */
export const RunTargetResponseSchema: GenMessage<RunTargetResponse> = /*@__PURE__*/
  messageDesc(file_lage_v1_lage, 1);

/**
 * @generated from message connectrpc.lage.v1.PingRequest
 */
export type PingRequest = Message<"connectrpc.lage.v1.PingRequest"> & {
};

/**
 * Describes the message connectrpc.lage.v1.PingRequest.
 * Use `create(PingRequestSchema)` to create a new message.
 */
export const PingRequestSchema: GenMessage<PingRequest> = /*@__PURE__*/
  messageDesc(file_lage_v1_lage, 2);

/**
 * @generated from message connectrpc.lage.v1.PingResponse
 */
export type PingResponse = Message<"connectrpc.lage.v1.PingResponse"> & {
  /**
   * @generated from field: bool pong = 1;
   */
  pong: boolean;
};

/**
 * Describes the message connectrpc.lage.v1.PingResponse.
 * Use `create(PingResponseSchema)` to create a new message.
 */
export const PingResponseSchema: GenMessage<PingResponse> = /*@__PURE__*/
  messageDesc(file_lage_v1_lage, 3);

/**
 * @generated from service connectrpc.lage.v1.LageService
 */
export const LageService: GenService<{
  /**
   * @generated from rpc connectrpc.lage.v1.LageService.RunTarget
   */
  runTarget: {
    methodKind: "unary";
    input: typeof RunTargetRequestSchema;
    output: typeof RunTargetResponseSchema;
  },
  /**
   * a ping function to check if the server is up
   *
   * @generated from rpc connectrpc.lage.v1.LageService.Ping
   */
  ping: {
    methodKind: "unary";
    input: typeof PingRequestSchema;
    output: typeof PingResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_lage_v1_lage, 0);

